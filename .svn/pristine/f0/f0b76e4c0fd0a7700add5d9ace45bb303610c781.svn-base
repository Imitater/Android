/*
 * 2017.
 * Huida.Burt
 * CopyRight
 *
 *
 *
 */

package com.ruiyihong.toyshop.activity;

import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AlertDialog;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import android.widget.PopupWindow;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.ruiyihong.toyshop.R;
import com.ruiyihong.toyshop.bean.AddressBean;
import com.ruiyihong.toyshop.bean.DjqBean;
import com.ruiyihong.toyshop.bean.ExpressBean;
import com.ruiyihong.toyshop.bean.ShoppingCarBean;
import com.ruiyihong.toyshop.bean.ZuQiBean;
import com.ruiyihong.toyshop.fragment.ShoppingCartFragment;
import com.ruiyihong.toyshop.shoppingcar.ShoppingCartBiz;
import com.ruiyihong.toyshop.util.AppConstants;
import com.ruiyihong.toyshop.util.DecimalUtil;
import com.ruiyihong.toyshop.util.GsonUtil;
import com.ruiyihong.toyshop.util.LogUtil;
import com.ruiyihong.toyshop.util.OkHttpUtil;
import com.ruiyihong.toyshop.util.SPUtil;
import com.ruiyihong.toyshop.util.ToastHelper;
import com.ruiyihong.toyshop.view.DividerItemDecoration;
import com.squareup.picasso.Picasso;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import butterknife.ButterKnife;
import butterknife.InjectView;
import butterknife.OnClick;
import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.Response;

import static com.ruiyihong.toyshop.activity.MineAddressActivity.JIESUAN_ADDRESS;


public class SettleActivity extends BaseActivity {


    @InjectView(R.id.tv_receive_people)
    TextView tvReceivePeople;
    @InjectView(R.id.tv_receive_name)
    TextView tvReceiveName;
    @InjectView(R.id.tv_receive_phone)
    TextView tvReceivePhone;
    @InjectView(R.id.tv_receive_address)
    TextView tvReceiveAddress;
    @InjectView(R.id.ln_address_edit)
    LinearLayout lnAddressEdit;
    @InjectView(R.id.rv_settle)
    RecyclerView rvSettle;
    @InjectView(R.id.tv_settle_count)
    TextView tvSettleCount;
    @InjectView(R.id.tv_settle_money)
    TextView tvSettleMoney;
    @InjectView(R.id.tv_settle_submit)
    TextView tvSettleSubmit;
    @InjectView(R.id.rv_setttle_bottom)
    RelativeLayout rvSetttleBottom;
    @InjectView(R.id.settle_title)
    RelativeLayout settle_title;
    @InjectView(R.id.tv_settle_peisongfs)
    TextView tvSettlePeisongfs;
    @InjectView(R.id.tv_djq)
    TextView tvDjq;
    @InjectView(R.id.tv_djq_yuan)
    TextView tvDjqYuan;
    @InjectView(R.id.tv_zuqi)
    TextView tvZuqi;
    @InjectView(R.id.tv_order_item_shopname)
    TextView tvOrderItemShopname;
    @InjectView(R.id.rl_peisong_click)
    RelativeLayout rlPeisongClick;
    @InjectView(R.id.rl_djq_click)
    RelativeLayout rlDjqClick;
    @InjectView(R.id.rl_zuqi_click)
    RelativeLayout rlZuqiClick;

    private static final int getDefaultAddress = 0;
    private static final int SelectDefaultAddress = 1;
    private static final int getEAY_All = 2;

    private static final int getExpress = 3;
    private static final int getVIP = 4;
    private static final int getDjq = 5;



    private int mHandlerCount = 0;
    private int mExpress = 0;
    private int mVip = 0;
    private int mDjq = 0;

    private String result;

    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {

            switch (msg.what) {
                case getEAY_All:
                    setSettleMoney(mVip + "", mExpress + "", mDjq + "");
                    break;
                case getDefaultAddress:
                    result = (String) msg.obj;
                    parseAddressData(result);
                    break;
                case SelectDefaultAddress:
                    Intent intent = new Intent(SettleActivity.this, MineAddressActivity.class);
                    intent.putExtra("type", JIESUAN_ADDRESS);
                    intent.putExtra("data", result);
                    startActivityForResult(intent, 0);
                    break;
                case getDjq:
                    mDjq = (int) msg.obj;
                    mHandlerCount++;
                    LogUtil.e("获取代金券:  " + mDjq + "  HandlerCount:  " + mHandlerCount);
                    break;
                case getVIP:
                    mVip = (int) msg.obj;
                    mHandlerCount++;
                    LogUtil.e("获取Vip:  " + mVip + "  HandlerCount:  " + mHandlerCount);
                    break;
                case getExpress:
                    mExpress = (int) msg.obj;
                    mHandlerCount++;
                    LogUtil.e("获取邮费:  " + mExpress + "  HandlerCount:  " + mHandlerCount);
                    break;
            }

            if (mHandlerCount >= 3) {
                handler.sendEmptyMessage(getEAY_All);
                mHandlerCount=0;
            }
        }
    };
    private List<ShoppingCarBean> list;
    private String uid;
    private PopupWindow mPopWindow;


    @Override
    protected int getLayoutId() {
        return R.layout.activity_settle;
    }

    @Override
    protected void initView() {
        settle_title.setFocusableInTouchMode(true);
        settle_title.requestFocus();
    }

    @Override
    protected void initData() {
        Intent intent = getIntent();
        Bundle bundleExtra = intent.getBundleExtra(ShoppingCartFragment.selectedList);
        list = (List<ShoppingCarBean>) bundleExtra.get(ShoppingCartFragment.selectedList);
        rvSettle.setLayoutManager(new LinearLayoutManager(SettleActivity.this));
        rvSettle.setAdapter(new MyAdapter(list));
        tvSettleCount.setText(ShoppingCartBiz.getGoodNumber(list) + "");
        uid = SPUtil.getUid(SettleActivity.this)[0];

        tvSettleSubmit.setEnabled(false);
        getExpressFromNet();  //获取邮费
        getAddressFromeNet(); //获取地址
        getVIPFromeNet();     //租期
        getYHQFromeNet();     //优惠券
    }

    //设置结算默认数据
    private void setSettleMoney(String zuqi, String express, String djq) {
        int zq = Integer.parseInt(zuqi);
        String money;
        if (zq > 20) {
            tvZuqi.setText(1+"天");
             money = DecimalUtil.multiplyWithScale(ShoppingCartBiz.getSelectedPrice(list), "1", 2);
        } else {
            tvZuqi.setText(zq+"天");
            money = DecimalUtil.multiplyWithScale(ShoppingCartBiz.getSelectedPrice(list), zuqi, 2);
            rlZuqiClick.setEnabled(false);
        }
        money = DecimalUtil.add(money, express);
        money = DecimalUtil.subtract(money, djq);
        tvSettlePeisongfs.setText(express + " 元");
        tvDjqYuan.setText("-" + djq + "元");
        tvSettleMoney.setText("￥" + money);
        tvSettleSubmit.setEnabled(true);
        LogUtil.e("设置默认数据");
    }

    //选择天数后进行计算
    private void ChangeDaysPrice(int position) {
        ToastHelper.getInstance().displayToastShort("选择了"+(position+1));
        int zq=position+1;
        String money = DecimalUtil.multiplyWithScale(ShoppingCartBiz.getSelectedPrice(list), zq+"", 2);
        tvZuqi.setText(zq+"天");
        money = DecimalUtil.add(money, mExpress+"");
        money = DecimalUtil.subtract(money, mDjq+"");
        tvDjqYuan.setText("-" + mDjq + "元");
        tvSettleMoney.setText("￥" + money);
        LogUtil.e("设置选择后数据");
    }

    //从网络获取Vip信息
    private void getVIPFromeNet() {
        Map<String, Object> para = new HashMap<>();
        para.put("uid", uid);
        String url = AppConstants.SERVE_URL + "index/vipclass/vipkind";
        try {
            OkHttpUtil.postJson(url, para, new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
                    LogUtil.e("VIP返回失败");
                }

                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    String result = OkHttpUtil.getResult(response);
                    if (result != null) {
                        ZuQiBean zuQiBean = GsonUtil.parseJsonWithGson(result, ZuQiBean.class);
                        List<ZuQiBean.DataBean> data = zuQiBean.getData();
                        ZuQiBean.DataBean dataBean = data.get(0);
                        String vkind = dataBean.getVkind();
                        int vzdzq = dataBean.getVzdzq();
                        Message msg = Message.obtain();
                        LogUtil.e("vip卡的种类:  " + vkind + " 最大租期： " + vzdzq);
                        msg.obj = vzdzq;
                        msg.what = getVIP;
                        handler.sendMessage(msg);
                    }
                }
            });
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //从网络获取代金券
    private void getYHQFromeNet() {
        Map<String, Object> para = new HashMap<>();
        para.put("uid", uid);
        String url = AppConstants.SERVE_URL + "index/quan/selperdjq";
        try {
            OkHttpUtil.postJson(url, para, new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
                    LogUtil.e("代金券返回失败");
                }

                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    String result = OkHttpUtil.getResult(response);
                    if (result != null) {
                        DjqBean djqBean = GsonUtil.parseJsonWithGson(result, DjqBean.class);
                        List<DjqBean.DataBean> data = djqBean.getData();
                        DjqBean.DataBean dataBean = data.get(0);
                        int duse = dataBean.getDuse();
                        int dmian = dataBean.getDmian();
                        int id = dataBean.getId();
                        Message msg = Message.obtain();
                        LogUtil.e("ID:  " + id + "  代金券面额" + dmian + "满" + duse + "可用");
                        msg.obj = dmian;
                        msg.what = getDjq;
                        handler.sendMessage(msg);
                    }
                }
            });
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //从网络获取运费
    private void getExpressFromNet() {
        String url = AppConstants.SERVE_URL + "index/expense/expense";
        try {
            OkHttpUtil.get(url, new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
                    LogUtil.e("获取邮费失败");
                }

                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    String result = OkHttpUtil.getResult(response);
                    if (result != null) {
                        ExpressBean expressBean = GsonUtil.parseJsonWithGson(result, ExpressBean.class);
                        List<ExpressBean.DataBean> data = expressBean.getData();
                        ExpressBean.DataBean dataBean = data.get(0);
                        Message msg = Message.obtain();
                        msg.obj = dataBean.getExpense();
                        msg.what = getExpress;
                        handler.sendMessage(msg);
                    }
                }
            });
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Override
    protected void initEvent() {

    }

    @Override
    protected void processClick(View v) throws IOException {

    }

    //窗口单击事件
    @OnClick({R.id.ln_address_edit, R.id.tv_settle_submit,R.id.rl_djq_click,R.id.rl_zuqi_click})
    public void onViewClicked(View view) {
        switch (view.getId()) {
            case R.id.ln_address_edit:
                handler.sendEmptyMessage(SelectDefaultAddress);
                break;
            case R.id.tv_settle_submit:
                UpDingDan();
                break;
            case R.id.rl_peisong_click:
                break;
            case R.id.rl_djq_click:
                ToastHelper.getInstance().displayToastShort("选择优惠券");
                break;
            case R.id.rl_zuqi_click:
                showPopUpWindow(view);
                break;
        }
    }

    //选择天数对话框
    public void showPopUpWindow(View view){
        //设置contentView
        View contentView = LayoutInflater.from(SettleActivity.this).inflate(R.layout.popuplayout, null);
        mPopWindow = new PopupWindow(contentView,
                LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT, true);
        RecyclerView rv = contentView.findViewById(R.id.rv_numberPicker);
        rv.setLayoutManager(new GridLayoutManager(SettleActivity.this,5));
       /* rv.addItemDecoration(new DividerItemDecoration(this,
                DividerItemDecoration.VERTICAL_LIST));*/
        rv.setAdapter(new NumberPickerAdapter());
        mPopWindow.setContentView(contentView);
        //设置各个控件的点击响应
        //显示PopupWindow
        mPopWindow.showAtLocation(view, Gravity.CENTER, 0, 0);

    }

    //这里直接拉起支付页面
    private void UpDingDan() {
        String testUri = AppConstants.SERVE_URL + "index/order/shengcheng";
        String s = "";
        String s1 = "";
        String s2 = "";
        for (ShoppingCarBean bean : list) {
            s += bean.getId() + ",";
            s1 += bean.getNum() + ",";
            s2 += bean.getShopprice() + ",";
        }
        LogUtil.e("Uid = " + uid);
        LogUtil.e("ID s = " + s.substring(0, s.length() - 1));
        LogUtil.e("Shopprice s1 = " + s1.substring(0, s1.length() - 1));
        LogUtil.e("Num s2 = " + s2.substring(0, s2.length() - 1));

        HashMap<String, String> params = new HashMap<>();
        params.put("uid", uid);
        params.put("wid", s.substring(0, s.length() - 1));
        params.put("wsl", s1.substring(0, s1.length() - 1));
        params.put("wjg", s2.substring(0, s2.length() - 1));

        params.put("yid", "0");  //优惠券 id
        params.put("ptime", "1");

        params.put("uaddr", tvReceiveAddress.getText().toString());
        params.put("unames", tvReceiveName.getText().toString());
        params.put("uphone", tvReceivePhone.getText().toString());
        params.put("zuqi", "20");  // 租期


        try {
            OkHttpUtil.postString(testUri, params, new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
                    LogUtil.e("上传订单错误");
                }

                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    final String result = OkHttpUtil.getResult(response);
                    LogUtil.e("上传订单成功" + result);
                    runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            new AlertDialog.Builder(SettleActivity.this).setMessage("订单已生成，是否前往支付").setPositiveButton("支付", new DialogInterface.OnClickListener() {
                                @Override
                                public void onClick(DialogInterface dialogInterface, int i) {
                                    ToastHelper.getInstance().displayToastShort("支付成功");
                                    //删除购物车中已结算的数据
                                    // ShoppingCartBiz.delGood();
                                    SettleActivity.this.finish();
                                }
                            }).setNegativeButton("取消", new DialogInterface.OnClickListener() {
                                @Override
                                public void onClick(DialogInterface dialogInterface, int i) {
                                    ToastHelper.getInstance().displayToastShort("支付失败");
                                    SettleActivity.this.finish();
                                }
                            }).create().show();
                        }
                    });
                }
            });
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    //从网络获取地址
    private void getAddressFromeNet() {
        String getAddress = AppConstants.SERVE_URL + "index/vip/allshinfo";
        String loginData = SPUtil.getString(this, AppConstants.SP_LOGIN, "");
        HashMap<String, String> params = new HashMap<>();
        try {
            JSONObject jsonObject = new JSONObject(loginData);
            int id = jsonObject.getInt("uid");
            params.put("id", id + "");
        } catch (JSONException e) {
            e.printStackTrace();
        }

        try {
            OkHttpUtil.postString(getAddress, params, new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
                    //地址有问题
                    runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            ToastHelper.getInstance().displayToastShort("请添加默认地址");
                        }
                    });
                }

                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    String result = OkHttpUtil.getResult(response);

                    if (result != null) {
                        if (result.contains("status")) {
                            //地址有问题
                            runOnUiThread(new Runnable() {
                                @Override
                                public void run() {
                                    ToastHelper.getInstance().displayToastShort("请添加默认地址");
                                }
                            });


                        } else {
                            //地址没问题
                            Message obtain = Message.obtain();
                            obtain.what = getDefaultAddress;
                            obtain.obj = result;
                            handler.sendMessage(obtain);
                        }
                    }
                }
            });
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //解析地址
    private void parseAddressData(String result) {
        Gson gson = new Gson();
        Type type = new TypeToken<ArrayList<AddressBean>>() {
        }.getType();
        ArrayList<AddressBean> addressList = gson.fromJson(result, type);
        AddressBean addressBean = addressList.get(0);
        setAddressData(addressBean);
    }

    //设置地址到界面
    private void setAddressData(AddressBean bean) {
        int shsex = bean.shsex;
        if (shsex == 1) {
            tvReceiveName.setText(bean.shname + " 女士");
        } else {
            tvReceiveName.setText(bean.shname + " 先生");
        }
        tvReceivePhone.setText(bean.shphon);
        tvReceiveAddress.setText(bean.dwaddre + bean.xxaddre);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 0) {
            if (resultCode == RESULT_OK) {
                String result = data.getStringExtra(JIESUAN_ADDRESS);
                LogUtil.e("结算页面收到数据" + result);
                AddressBean addressBean = new Gson().fromJson(result, AddressBean.class);
                setAddressData(addressBean);
            }
        }

    }


    /*******************天数选择器***************/
    class NumberPickerAdapter extends RecyclerView.Adapter<mNumberPickerHolder> {
        @Override
        public mNumberPickerHolder onCreateViewHolder(ViewGroup parent, int viewType) {
            mNumberPickerHolder holder= new mNumberPickerHolder(LayoutInflater.from(SettleActivity.this).inflate(R.layout.number_layout,null));
            return holder;
        }

        @Override
        public void onBindViewHolder(mNumberPickerHolder holder, final int position) {
            holder.tv.setText(""+(position+1));
            holder.tv.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    ChangeDaysPrice(position);
                    mPopWindow.dismiss();
                }
            });
        }
        @Override
        public int getItemCount() {
            return 20;
        }
    }

    class mNumberPickerHolder extends RecyclerView.ViewHolder{
        TextView tv;

        public mNumberPickerHolder(View v) {
            super(v);
             tv = v.findViewById(R.id.tv_number_item);
        }
    }

    /*******************商品展示区***************/
    class MyAdapter extends RecyclerView.Adapter<mHolder> {
        private List<ShoppingCarBean> list;


        public MyAdapter(List<ShoppingCarBean> list) {
            this.list = list;
        }

        @Override
        public mHolder onCreateViewHolder(ViewGroup parent, int viewType) {
            mHolder holder = new mHolder(LayoutInflater.from(
                    SettleActivity.this).inflate(R.layout.settle_item, parent, false));
            return holder;
        }

        @Override
        public void onBindViewHolder(mHolder holder, int position) {
            ShoppingCarBean item = list.get(position);
            Picasso.with(SettleActivity.this).load(AppConstants.IMG_BASE_URL + item.getShopimg()).placeholder(R.mipmap.good_default).error(R.mipmap.good_default).fit().into(holder.icon);
            holder.name.setText(item.getName());
            holder.price.setText("￥" + item.getShopprice() + "/天");
            holder.settle_peisontime.setText("发货时间：承诺48小时发货");
        }

        @Override
        public int getItemCount() {
            return list.size();
        }

    }

    class mHolder extends RecyclerView.ViewHolder {
        ImageView icon;
        TextView name;
        TextView price;
        TextView settle_peisontime;
        TextView settle_peisonfs;

        public mHolder(View v) {
            super(v);
            icon = v.findViewById(R.id.settle_icon);
            name = v.findViewById(R.id.settle_name);
            price = v.findViewById(R.id.settle_price);
            settle_peisontime = v.findViewById(R.id.settle_peisontime);
            settle_peisonfs = v.findViewById(R.id.tv_settle_peisongfs);
        }
    }
}
